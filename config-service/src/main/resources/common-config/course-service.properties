
server.port=9998

eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka

## this will include error message in response
server.error.include-message=always

##Below are personal
spring.datasource.url=jdbc:mysql://localhost:3306/lmsabhishek?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=root
##Below are IIHT
#spring.datasource.url = jdbc:mysql://localhost:3306/lmsabhishek?createDatabaseIfNotExist=true
#spring.datasource.username = root
#spring.datasource.password = pass@word1
##Below are AWS provided by Koel
#spring.datasource.url = jdbc:mysql://abhishekdb.c918bifp8fik.us-west-2.rds.amazonaws.com:3306/lmsabhishek?createDatabaseIfNotExist=true
#spring.datasource.username = root
#spring.datasource.password = password123
## Below are IIHT Lab AWS MYSQL Connection
#spring.datasource.url = jdbc:mysql://abhishekn2109328mysqldb.crnxj3rmz4w2.eu-north-1.rds.amazonaws.com:3306/lmsabhishek?createDatabaseIfNotExist=true
#spring.datasource.username = root
#spring.datasource.password = password123

loginBaseUrl=http://localhost:9999/api/v/1.0/lms/company/login


## Hibernate Properties
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect

# Hibernate ddl auto
spring.jpa.hibernate.ddl-auto = update

## Spring Boot 2+ set as default the PathPathern-based matcher, while Spring Fox expects the Ant-based matcher
spring.mvc.pathmatch.matching-strategy=ANT_PATH_MATCHER


jwt.secret = accreditation
## 1 hour is expiration date
jwt.expirationDateInMs=3600000
jwt.refreshExpirationDateInMs=9000000

kafka.enabled=false
#kafka.enabled=true

spring.kafka.bootstrap-servers[0]=localhost:9092

#spring.kafka.bootstrap-servers[0]=localhost:9091
#spring.kafka.bootstrap-servers[1]=localhost:9092
#spring.kafka.bootstrap-servers[2]=localhost:9093

spring.kafka.template.default-topic= course-service-add-event
spring.kafka.producer.key-serializer= org.apache.kafka.common.serialization.IntegerSerializer
spring.kafka.producer.value-serializer= org.apache.kafka.common.serialization.StringSerializer

spring.kafka.topics.topic1=course-service-add-event
spring.kafka.topics.topic2=course-service-delete-courseName-event
spring.kafka.topics.topic3=course-service-delete-courseId-event
spring.kafka.topics.topic4=course-service-update-event


spring.kafka.consumer.group-id= course-service-group
spring.kafka.consumer.key-deserializer= org.apache.kafka.common.serialization.IntegerDeserializer
spring.kafka.consumer.value-deserializer= org.apache.kafka.common.serialization.StringDeserializer

##Below are personal
#spring.data.mongodb.uri=mongodb://localhost:27017
#spring.data.mongodb.database=lmsabhishek
##Below are IIHT
